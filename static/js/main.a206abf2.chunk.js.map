{"version":3,"sources":["components/layouts/Header.js","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/pages/404Page.js","components/test/Test.js","components/layouts/InputGrop.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Consumer","Contact","showContactInfo","onShow","onDelete","a","delete","name","email","phone","style","backgroundColor","borderRadius","color","float","marginRight","onClick","bind","padding","PropType","object","isRequired","Contacts","Fragment","key","Test","title","url","fetch","then","response","json","src","alt","InputGrop","label","placeholder","onChange","error","htmlFor","classnames","prototype","string","func","AddContact","errors","onSubmit","e","preventDefault","newConatct","post","history","push","target","add","EditContact","EditConatct","match","params","put","App","exact","path","component","About","Notfound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.a206abf2.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Header = props => {\n    const { branding } = props;\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n                <div className=\"container\">\n                    <a className=\"navbar-brand\" href=\"/\">{branding}</a>\n                    <div>\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/\">Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/contact/add\">Add Contact</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n\nexport default Header;","import React, { Component } from 'react'\nimport axios from 'axios'\n// import Contact from './components/contacts/Contact';\n\nconst Context =  React.createContext();\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'DELETE_CONTACT':\n        return{\n            ...state,\n            contacts: state.contacts.filter(\n                contact => contact.id !== action.payload\n            )\n        };\n        case 'EDIT_CONTACT':\n        return{\n            ...state,\n            contacts: state.contacts.map(contact => \n                contact.id === action.payload.id\n                ? (contact = action.payload)\n                : contact\n            )\n        };\n        case 'ADD_CONTACT':\n        return{\n            ...state,\n            contacts: [action.payload, ...state.contacts]\n        };\n        default: return state;\n    }\n}\n\nexport class Provider extends Component{\n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    }\n\n    async componentDidMount(){\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n        \n        this.setState({contacts: res.data});\n    }\n\n    render(){\n        return(\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer; ","import React, { Component } from 'react'\nimport PropType from 'prop-types'\nimport { Consumer } from '../../Context'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n\n    onShow=()=>{this.setState({showContactInfo:!this.state.showContactInfo})}\n\n    onDelete = async (id, dispatch) => {\n        try{\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n            dispatch({type: 'DELETE_CONTACT', payload: id});\n        }catch(e){\n            dispatch({type: 'DELETE_CONTACT', payload: id})};\n    }\n\n    render() {\n        const {id, name, email, phone } = this.props.contact;\n        // const { showContactInfo } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                        <h4>{ name } \n                        <button style={{backgroundColor:\"blue\",borderRadius:7,color: \"white\",float: \"left\", marginRight:15}} onClick={this.onShow} type=\"button\" className=\"btn-sm\">{this.state.showContactInfo ? \"Hide\" : \"Show\"}</button>\n                        <button onClick={this.onDelete.bind(this, id, dispatch)} type=\"button\" className=\"btn-sm\" style={{backgroundColor: \"red\", color: \"white\", float: 'right', borderRadius: 7,padding: \"2px 8px\"}}><b>&times;</b></button>\n                        <Link to={`/contact/edit/${id}`} className=\"btn-sm\" style={{backgroundColor: \"black\", color: \"white\", float: 'right', borderRadius: 7,padding: \"3px 10px\", marginRight: 5}}><b> / </b></Link>\n                        </h4>{ \n                            this.state.showContactInfo ? (\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">Email : { email }</li>\n                                    <li className=\"list-group-item\">Phone : { phone }</li>\n                                </ul>\n                            ) : null \n                        }\n                    </div>\n                    )\n                }}\n            </Consumer>\n           \n        )\n    }\n}\n\nContact.PropType = {\n    contact: PropType.object.isRequired,\n}\n\nexport default Contact;","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport { Consumer } from '../../Context'\n\nclass Contacts extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const {contacts} = value;\n                    return (\n                         <React.Fragment>\n                             <h1 className=\"display-5\">Contact List</h1>\n                            { contacts.map(contact=>(\n                                <Contact key={contact.id} contact={contact} />\n                            ))}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n           \n        )\n    }\n}\nexport default Contacts;","import React from 'react'\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple app to manage contacts</p>\n            <p className=\"text-secondary\">Vesion 1.0.0</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n            <p className=\"lead\">Sorry, that page does not exist</p>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n\n    state = {\n        title: '',\n        url: '' \n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/photos/7```')\n        .then(response => response.json())\n        .then(data => this.setState({\n            title: data.title,\n            url: data.url\n        }))\n    }\n\n    render() {\n        const { title, url } = this.state;\n        return (\n            <div>\n                <h1>{ title }</h1>\n                <img src={url} alt={url} />\n            </div>\n        )\n    }\n}\n\nexport default Test;","import React from 'react'\nimport PropType from 'prop-types'\nimport classnames from 'classnames'\n\nconst InputGrop = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input type={type} onChange={onChange} value={value} name={name} className={classnames(\"form-control form-control-lg\", {'is-invalid': error})} placeholder={placeholder} />\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n            <br/>                \n        </div>\n    )\n}\n\nInputGrop.prototype = {\n    label: PropType.string.isRequired,\n    name: PropType.string.isRequired,\n    placeholder: PropType.string.isRequired,\n    value: PropType.string.isRequired,\n    type: PropType.string.isRequired,\n    error: PropType.string,\n    onChange: PropType.func.isRequired,\n}\n\nexport default InputGrop;","import React, { Component } from 'react';\nimport { Consumer } from '../../Context'\nimport InputGrop from '../layouts/InputGrop'\nimport axios from 'axios'\n\nclass AddContact extends Component{ \n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    \n    \n    // nameRef = React.createRef();    \n    // emailRef = React.createRef();\n    // phoneRef = React.createRef();\n    onSubmit = async (dispatch, e) => { \n        e.preventDefault()\n        const { name, email, phone } = this.state\n        if(name === ''){\n            this.setState({errors: {name: \"Name is Required\"}});\n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: \"Email is Required\"}});\n            return;\n        }\n        if(phone === ''){\n            this.setState({errors: {phone: \"Phone is Required\"}});\n            return;\n        }\n        const newConatct = {\n            name,\n            email,\n            phone\n        }\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newConatct);\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n        this.props.history.push('/');\n    }\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\n        // let name = this.nameRef.current.value;\n        // let email = this.emailRef.current.value;\n        // let phone = this.phoneRef.current.value;\n        // this.props.add(name, email, phone);    \n        \n    // }\n\n    render() {\n        const { name, email, phone, errors } = this.state\n\n        return(\n            <Consumer>\n                {value => {\n                    const { dispatch } = value\n                     return (    \n                        <div className=\"container\">\n                            <div className=\"card mb-3\">   \n                                <div className=\"card-header\">\n                                    Add Contact\n                                </div>  \n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <div className=\"card-body\">\n                                            <InputGrop\n                                            label=\"Name\"\n                                            name=\"name\"\n                                            placeholder=\"Enter Name\"\n                                            type=\"text\"\n                                            value={name}\n                                            onChange={this.onChange}\n                                            error={errors.name}\n                                            />\n                                            <InputGrop\n                                            label=\"Email\"\n                                            name=\"email\"\n                                            placeholder=\"Enter Email\"\n                                            type=\"email\"\n                                            value={email}\n                                            onChange={this.onChange}\n                                            error={errors.email}\n                                            />\n                                            <InputGrop\n                                            label=\"Phone\"\n                                            name=\"phone\"\n                                            placeholder=\"Enter Phone\"\n                                            type=\"phone\"\n                                            value={phone}\n                                            onChange={this.onChange}\n                                            error={errors.phone}\n                                            />\n                                    </div>           \n                                    <div className=\"card-footer\">\n                                        <button onClick={this.add} className=\"btn btn-block btn-primary\">Add Contact</button>            \n                                    </div>\n                                </form>\n                            </div>        \n                        </div>        \n                    ) \n                }}\n            </Consumer>\n        )\n\n          \n    }\n}\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../Context'\nimport InputGrop from '../layouts/InputGrop'\nimport axios from 'axios'\n\nclass EditContact extends Component{ \n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    async componentDidMount(){\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        const contact = res.data;\n        this.setState({ \n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }    \n    \n    // nameRef = React.createRef();    \n    // emailRef = React.createRef();\n    // phoneRef = React.createRef();\n    onSubmit = async (dispatch, e) => { \n        e.preventDefault()\n        const { name, email, phone } = this.state\n        if(name === ''){\n            this.setState({errors: {name: \"Name is Required\"}});\n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: \"Email is Required\"}});\n            return;\n        }\n        if(phone === ''){\n            this.setState({errors: {phone: \"Phone is Required\"}});\n            return;\n        }\n        const EditConatct = {\n            name,\n            email,\n            phone\n        }\n\n        const { id } = this.props.match.params;\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, EditConatct);\n        dispatch({type: 'EDIT_CONTACT', payload: res.data});\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n        this.props.history.push('/');\n    }\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\n        // let name = this.nameRef.current.value;\n        // let email = this.emailRef.current.value;\n        // let phone = this.phoneRef.current.value;\n        // this.props.add(name, email, phone);    \n        \n    // }\n\n    render() {\n        const { name, email, phone, errors } = this.state\n\n        return(\n            <Consumer>\n                {value => {\n                    const { dispatch } = value\n                     return (    \n                        <div className=\"container\">\n                            <div className=\"card mb-3\">   \n                                <div className=\"card-header\">\n                                    Edit Contact\n                                </div>  \n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <div className=\"card-body\">\n                                            <InputGrop\n                                            label=\"Name\"\n                                            name=\"name\"\n                                            placeholder=\"Enter Name\"\n                                            type=\"text\"\n                                            value={name}\n                                            onChange={this.onChange}\n                                            error={errors.name}\n                                            />\n                                            <InputGrop\n                                            label=\"Email\"\n                                            name=\"email\"\n                                            placeholder=\"Enter Email\"\n                                            type=\"email\"\n                                            value={email}\n                                            onChange={this.onChange}\n                                            error={errors.email}\n                                            />\n                                            <InputGrop\n                                            label=\"Phone\"\n                                            name=\"phone\"\n                                            placeholder=\"Enter Phone\"\n                                            type=\"phone\"\n                                            value={phone}\n                                            onChange={this.onChange}\n                                            error={errors.phone}\n                                            />\n                                    </div>           \n                                    <div className=\"card-footer\">\n                                        <button className=\"btn btn-block btn-primary\">Update Contact</button>            \n                                    </div>\n                                </form>\n                            </div>        \n                        </div>        \n                    ) \n                }}\n            </Consumer>\n        )\n\n          \n    }\n}\nexport default EditContact;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Header from './components/layouts/Header'\nimport Contacts from './components/contacts/Contacts'\nimport About from './components/pages/About'\nimport Notfound from './components/pages/404Page'\nimport Test from './components/test/Test'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport { Provider } from './Context'\n\nclass App extends Component{\n  render(){\n      return (\n          <Provider>\n            <Router>\n              <div className=\"App\">\n                  <Header branding=\"Contact Manager\" />\n                  <div className=\"container\">\n                    <Switch>\n                      <Route exact path=\"/\" component={Contacts} />\n                      <Route exact path=\"/contact/add\" component={AddContact} />\n                      <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                      <Route exact path=\"/about\" component={About} />\n                      <Route exact path=\"/test\" component={Test} />\n                      {/* Not Found Page */}\n                      <Route component={Notfound} />\n                    </Switch>\n                  </div>\n              </div>\n            </Router>\n        </Provider>\n      )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}